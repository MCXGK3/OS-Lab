HTIF is available!
(Emulated) memory size: 2048 MB
In m_start, hartid:0
Enter supervisor mode...
tp:0
PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080167000, PKE kernel size: 0x0000000000167000 .
free physical memory address: [0x0000000080167000, 0x0000000087ffffff] 
kernel memory manager is initializing ...
In m_start, hartid:1
Enter supervisor mode...
tp:1
_etext is 0x000000008000b000
KERN_BASE 0x0000000080000000
physical address of _etext is: 0x000000008000b000
kernel page table is on 
kernel page table is on 
process size=43176
RAMDISK0: base address of RAMDISK0 is: 0x0000000087f35000
RFS: format RAMDISK0 done!
Switch to user mode...
0
Switch to user mode...
1
in alloc_proc. user frame 0x0000000087f29000, user stack 0x000000007ffff000, user kstack 0x0000000087f28000 
FS: created a file management struct for a process.
in alloc_proc. build proc_file_management successfully.
User application is loading.
Application: /bin/shell
off 0
4096 7004 5 7004 0 0x0000000000010000 1 0x0000000000010000
va is 0x0000000000010000
size is 7004
offset is 0x0000000000000000
alloc pa:0x0000000087f09000
in alloc_proc. user frame 0x0000000087f1f000, user stack 0x000000007ffff000, user kstack 0x0000000087f1e000 
FS: created a file management struct for a process.
in alloc_proc. build proc_file_management successfully.
User application is loading.
Application: /bin/shell_help
off 0
4096 3380 5 3380 0 0x0000000000010000 1 0x0000000000010000
va is 0x0000000000010000
size is 3380
offset is 0x0000000000000000
alloc pa:0x0000000087efe000
nb is 4096
offset is 0

alloc pa:0x0000000087efb000
nb is 2908
offset is 4096

CODE_SEGMENT added at mapped info offset:4
off 8192
4096 24 6 2832 8192 0x0000000000012000 1 0x0000000000012000
va is 0x0000000000012000
size is 2832
offset is 0x0000000000002000
alloc pa:0x0000000087efa000
nb is 2832
offset is 8192

DATA_SEGMENT added at mapped info offset:5
debug size is 13392
nb is 3380
offset is 0

CODE_SEGMENT added at mapped info offset:4
off 3384
4096 0 6 16 3384 0x0000000000011d38 1 0x0000000000011d38
va is 0x0000000000011d38
size is 16
offset is 0x0000000000000d38
alloc pa:0x0000000087ef9000
nb is 16
offset is 3384

DATA_SEGMENT added at mapped info offset:5
debug size is 6465
Application program entry point (virtual address): 0x00000000000109f8
going to insert process 0 to ready queue.
going to schedule process 0 to run.
Application program entry point (virtual address): 0x00000000000100b0
going to insert process 1 to ready queue.
going to schedule process 1 to run.
User call fork.
will fork a child from parent 0.
2
in alloc_proc. user frame 0x0000000087f00000, user stack 0x000000007ffff000, user kstack 0x0000000087f0c000 
FS: created a file management struct for a process.
in alloc_proc. build proc_file_management successfully.
stack_segment:0x000000007fffe000 0x0000000087ef8000
do_fork map code segment at pa:0000000087f09000 of parent to child at va:0000000000010000.
going to insert process 2 to ready queue.
going to schedule process 2 to run.
Application: cat
off 0
4096 4172 5 4172 0 0x0000000000010000 1 0x0000000000010000
va is 0x0000000000010000
size is 4172
offset is 0x0000000000000000
alloc pa:0x0000000087ee6000
nb is 4096
offset is 0

alloc pa:0x0000000087ee5000
nb is 76
offset is 4096

CODE_SEGMENT added at mapped info offset:4
off 80
4096 0 6 24 80 0x0000000000012050 1 0x0000000000012050
va is 0x0000000000012050
size is 24
offset is 0x0000000000000050
alloc pa:0x0000000087ee4000
nb is 24
offset is 80

DATA_SEGMENT added at mapped info offset:5
debug size is 9286
Application program entry point (virtual address): 0x00000000000100b0
handle_page_fault: 000000007fffd868
User exit with code:0.
going to insert process 0 to ready queue.
going to schedule process 0 to run.
User call fork.
will fork a child from parent 0.
3
in alloc_proc. user frame 0x0000000087eed000, user stack 0x000000007ffff000, user kstack 0x0000000087edf000 
FS: created a file management struct for a process.
in alloc_proc. build proc_file_management successfully.
stack_segment:0x000000007fffe000 0x0000000087edd000
do_fork map code segment at pa:0000000087f09000 of parent to child at va:0000000000010000.
going to insert process 3 to ready queue.
going to insert process 3 to ready queue.
going to schedule process 3 to run.
Application: cat
off 0
4096 4172 5 4172 0 0x0000000000010000 1 0x0000000000010000
va is 0x0000000000010000
size is 4172
offset is 0x0000000000000000
alloc pa:0x0000000087ecb000
nb is 4096
offset is 0

alloc pa:0x0000000087eca000
nb is 76
offset is 4096

CODE_SEGMENT added at mapped info offset:4
off 80
4096 0 6 24 80 0x0000000000012050 1 0x0000000000012050
va is 0x0000000000012050
size is 24
offset is 0x0000000000000050
alloc pa:0x0000000087ec9000
nb is 24
offset is 80

DATA_SEGMENT added at mapped info offset:5
debug size is 9286
Application program entry point (virtual address): 0x00000000000100b0
handle_page_fault: 000000007fffd868
User exit with code:0.
going to insert process 1 to ready queue.
going to schedule process 1 to run.
hartid=0  Ticks 0
