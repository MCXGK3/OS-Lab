HTIF is available!
(Emulated) memory size: 2048 MB
In m_start, hartid:0
Enter supervisor mode...
tp:0
PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080167000, PKE kernel size: 0x0000000000167000 .
free physical memory address: [0x0000000080167000, 0x0000000087ffffff] 
kernel memory manager is initializing ...
In m_start, hartid:1
Enter supervisor mode...
tp:1
_etext is 0x000000008000b000
KERN_BASE 0x0000000080000000
physical address of _etext is: 0x000000008000b000
kernel page table is on 
kernel page table is on 
process size=43176
RAMDISK0: base address of RAMDISK0 is: 0x0000000087f35000
RFS: format RAMDISK0 done!
Switch to user mode...
0
Switch to user mode...
1
in alloc_proc. user frame 0x0000000087f29000, user stack 0x000000007ffff000, user kstack 0x0000000087f28000 
FS: created a file management struct for a process.
in alloc_proc. build proc_file_management successfully.
User application is loading.
Application: /bin/cow
off 0
4096 3436 5 3436 0 0x0000000000010000 1 0x0000000000010000
va is 0x0000000000010000
size is 3436
offset is 0x0000000000000000
alloc pa:0x0000000087f09000
in alloc_proc. user frame 0x0000000087f1f000, user stack 0x000000007ffff000, user kstack 0x0000000087f1e000 
FS: created a file management struct for a process.
in alloc_proc. build proc_file_management successfully.
User application is loading.
Application: /bin/shell
off 0
4096 6756 5 6756 0 0x0000000000010000 1 0x0000000000010000
va is 0x0000000000010000
size is 6756
offset is 0x0000000000000000
alloc pa:0x0000000087efe000
nb is 3436
offset is 0

CODE_SEGMENT added at mapped info offset:4
off 3440
4096 0 6 16 3440 0x0000000000011d70 1 0x0000000000011d70
va is 0x0000000000011d70
size is 16
offset is 0x0000000000000d70
alloc pa:0x0000000087efb000
nb is 16
offset is 3440

DATA_SEGMENT added at mapped info offset:5
debug size is 6331
nb is 4096
offset is 0

alloc pa:0x0000000087efa000
nb is 2660
offset is 4096

CODE_SEGMENT added at mapped info offset:4
off 8192
4096 24 6 2832 8192 0x0000000000012000 1 0x0000000000012000
va is 0x0000000000012000
size is 2832
offset is 0x0000000000002000
alloc pa:0x0000000087ef9000
nb is 2832
offset is 8192

DATA_SEGMENT added at mapped info offset:5
debug size is 13110
Application program entry point (virtual address): 0x00000000000100b0
going to insert process 0 to ready queue.
going to schedule process 0 to run.
User call fork.
will fork a child from parent 0.
2
in alloc_proc. user frame 0x0000000087f10000, user stack 0x000000007ffff000, user kstack 0x0000000087ef9000 
FS: created a file management struct for a process.
in alloc_proc. build proc_file_management successfully.
stack_segment:0x000000007fffe000 0x0000000087ef7000
do_fork map code segment at pa:0000000087f09000 of parent to child at va:0000000000010000.
going to insert process 2 to ready queue.
User exit with code:0.
going to schedule process 2 to run.
handle_page_fault: 0000000000400000
User exit with code:0.
Application program entry point (virtual address): 0x0000000000010a0a
going to insert process 1 to ready queue.
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
3
in alloc_proc. user frame 0x0000000087f05000, user stack 0x000000007ffff000, user kstack 0x0000000087eec000 
FS: created a file management struct for a process.
in alloc_proc. build proc_file_management successfully.
stack_segment:0x000000007fffe000 0x0000000087eea000
do_fork map code segment at pa:0000000087efe000 of parent to child at va:0000000000010000.
going to insert process 3 to ready queue.
going to schedule process 3 to run.
Application: cat
vfs_open: cannot find the file!
User exit with code:0.
going to insert process 1 to ready queue.
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
4
in alloc_proc. user frame 0x0000000087eea000, user stack 0x000000007ffff000, user kstack 0x0000000087edf000 
FS: created a file management struct for a process.
in alloc_proc. build proc_file_management successfully.
stack_segment:0x000000007fffe000 0x0000000087edd000
do_fork map code segment at pa:0000000087efe000 of parent to child at va:0000000000010000.
going to insert process 4 to ready queue.
going to schedule process 4 to run.
Application: cat
vfs_open: cannot find the file!
User exit with code:0.
going to insert process 1 to ready queue.
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
5
in alloc_proc. user frame 0x0000000087edd000, user stack 0x000000007ffff000, user kstack 0x0000000087ed2000 
FS: created a file management struct for a process.
in alloc_proc. build proc_file_management successfully.
stack_segment:0x000000007fffe000 0x0000000087ed0000
do_fork map code segment at pa:0000000087efe000 of parent to child at va:0000000000010000.
going to insert process 5 to ready queue.
going to schedule process 5 to run.
Application: cat
vfs_open: cannot find the file!
User exit with code:0.
going to insert process 1 to ready queue.
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
6
in alloc_proc. user frame 0x0000000087ed0000, user stack 0x000000007ffff000, user kstack 0x0000000087ec5000 
FS: created a file management struct for a process.
in alloc_proc. build proc_file_management successfully.
stack_segment:0x000000007fffe000 0x0000000087ec3000
do_fork map code segment at pa:0000000087efe000 of parent to child at va:0000000000010000.
going to insert process 6 to ready queue.
going to schedule process 6 to run.
Application: cat
vfs_open: cannot find the file!
User exit with code:0.
going to insert process 1 to ready queue.
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
7
in alloc_proc. user frame 0x0000000087eb8000, user stack 0x000000007ffff000, user kstack 0x0000000087eb7000 
FS: created a file management struct for a process.
in alloc_proc. build proc_file_management successfully.
stack_segment:0x000000007fffe000 0x0000000087eb5000
do_fork map code segment at pa:0000000087efe000 of parent to child at va:0000000000010000.
going to insert process 7 to ready queue.
going to schedule process 7 to run.
Application: cat
vfs_open: cannot find the file!
User exit with code:0.
going to insert process 1 to ready queue.
going to schedule process 1 to run.
